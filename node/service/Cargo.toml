[package]
name = "tetcoin-service"
version = "0.8.3"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2018"

[dependencies]
# Tetcore Client
tc-authority-discovery = { version = "0.8.0" }
babe = { package = "tc-consensus-babe", version = "0.8.0" }
grandpa = { package = "tc-finality-grandpa", version = "0.8.0" }
tc-block-builder = { version = "0.8.0" }
tc-chain-spec = { version = "2.0.0" }
tc-client-api = { version = "2.0.0" }
tc-client-db = { version = "0.8.0" }
tc-consensus = { version = "0.8.0" }
tc-consensus-slots = { version = "0.8.0" }
tc-executor = { version = "0.8.0" }
tc-finality-grandpa-warp-sync = { version = "0.8.0", optional = true }
tc-network = { version = "0.8.0" }
tc-transaction-pool = { version = "2.0.0" }
service = { package = "tc-service", version = "0.8.0", default-features = false }
telemetry = { package = "tc-telemetry", version = "2.0.0" }

# Tetcore Primitives
tp-authority-discovery = { version = "2.0.2" }
babe-primitives = { package = "tp-consensus-babe", version = "0.8.2" }
consensus_common = { package = "tp-consensus", version = "0.8.2" }
grandpa_primitives = { package = "tp-finality-grandpa", version = "2.0.2" }
inherents = { package = "tp-inherents", version = "2.0.2" }
tp-api = { version = "2.0.2" }
tp-block-builder = { version = "2.0.2" }
tp-blockchain = { version = "2.0.2" }
tet-core = "2.0.2"
tet-io = { version = "2.0.2" }
tp-keystore = { version = "0.8.1" }
tp-offchain = { package = "tp-offchain", version = "2.0.2" }
tp-runtime = "2.0.2"
tp-session = { version = "2.0.2" }
tetcore-storage = { version = "2.0.2" }
tp-transaction-pool = { version = "2.0.2" }
tp-trie = { version = "2.0.2" }
tp-state-machine = { version = "0.8.2" }

# Tetcore Pallets
noble-babe = { version = "2.0.1" }
noble-im-online = { version = "2.0.0", branch = "master" }
noble-staking = { version = "2.0.0" }
noble-transaction-payment-rpc-runtime-api = { version = "2.0.0" }

# Tetcore Other
fabric-benchmarking = { version = "2.0.0" }
fabric-system-rpc-runtime-api = { version = "2.0.0" }
prometheus-endpoint = { version = "0.8.1" }

# External Crates
futures = "0.3.12"
hex-literal = "0.3.1"
tracing = "0.1.22"
tracing-futures = "0.2.4"
serde = { version = "1.0.123", features = ["derive"] }
thiserror = "1.0.23"

# Tetcoin
tetcoin-node-core-proposer = { path = "../core/proposer" }
tetcoin-overseer = { path = "../overseer" }
tetcoin-parachain = { version = "0.8.28", path = "../../parachain" }
tetcoin-primitives = { version = "0.8.28", path = "../../primitives" }
tetcoin-rpc = { path = "../../rpc" }
tetcoin-subsystem = { package = "tetcoin-node-subsystem", path = "../subsystem" }
tetcoin-node-subsystem-util = { path = "../subsystem-util" }
tetcoin-runtime-parachains = { path = "../../runtime/parachains" }

# Tetcoin Runtimes
tetcoin-runtime = { path = "../../runtime/tetcoin" }
kusama-runtime = { path = "../../runtime/kusama" }
westend-runtime = { path = "../../runtime/westend" }
rococo-runtime = { path = "../../runtime/rococo" }

# Tetcoin Subsystems
tetcoin-availability-bitfield-distribution = { path = "../network/bitfield-distribution", optional = true }
tetcoin-availability-distribution = { path = "../network/availability-distribution", optional = true }
tetcoin-availability-recovery = { path = "../network/availability-recovery", optional = true }
tetcoin-collator-protocol = { path = "../network/collator-protocol", optional = true }
tetcoin-network-bridge = { path = "../network/bridge", optional = true }
tetcoin-node-collation-generation = { path = "../collation-generation", optional = true }
tetcoin-node-core-av-store = { path = "../core/av-store", optional = true }
tetcoin-node-core-backing = { path = "../core/backing", optional = true }
tetcoin-node-core-bitfield-signing = { path = "../core/bitfield-signing", optional = true }
tetcoin-node-core-candidate-selection = { path = "../core/candidate-selection", optional = true }
tetcoin-node-core-candidate-validation = { path = "../core/candidate-validation", optional = true }
tetcoin-node-core-chain-api = { path = "../core/chain-api", optional = true }
tetcoin-node-core-provisioner = { path = "../core/provisioner", optional = true }
tetcoin-node-core-runtime-api = { path = "../core/runtime-api", optional = true }
tetcoin-pov-distribution = { path = "../network/pov-distribution", optional = true }
tetcoin-statement-distribution = { path = "../network/statement-distribution", optional = true }
tetcoin-approval-distribution = { path = "../network/approval-distribution", optional = true }

[dev-dependencies]
tetcoin-test-client = { path = "../test/client" }
env_logger = "0.8.2"

[features]
default = ["db", "full-node"]
db = ["service/db"]
full-node = [
	"tetcoin-node-core-av-store",
	"tc-finality-grandpa-warp-sync"
]

runtime-benchmarks = [
	"tetcoin-runtime/runtime-benchmarks",
	"kusama-runtime/runtime-benchmarks",
	"westend-runtime/runtime-benchmarks",
	"rococo-runtime/runtime-benchmarks"
]

real-overseer = [
	"tetcoin-availability-bitfield-distribution",
	"tetcoin-availability-distribution",
	"tetcoin-availability-recovery",
	"tetcoin-collator-protocol",
	"tetcoin-network-bridge",
	"tetcoin-node-collation-generation",
	"tetcoin-node-core-backing",
	"tetcoin-node-core-bitfield-signing",
	"tetcoin-node-core-candidate-selection",
	"tetcoin-node-core-candidate-validation",
	"tetcoin-node-core-chain-api",
	"tetcoin-node-core-provisioner",
	"tetcoin-node-core-runtime-api",
	"tetcoin-pov-distribution",
	"tetcoin-statement-distribution",
	"tetcoin-approval-distribution",
]
